---
import MainLayout from '../../layouts/MainLayout.astro';
---

<MainLayout>
    <div class="flex justify-center items-center min-h-[calc(100vh-200px)]">
        <div class="max-w-md w-full p-8 bg-base-100 rounded-lg shadow-lg text-center">
            <div class="space-y-4">
                <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-info/20 text-info mb-4">
                    <span class="loading loading-spinner loading-lg"></span>
                </div>
                <h2 class="text-2xl font-bold">Finalizing Authentication</h2>
                <p>Please wait while we complete the sign-in process...</p>
            </div>
        </div>
    </div>
</MainLayout>

<script>
    import { pb } from '../../lib/pocketbase';

    // This script runs when the page loads to handle the OAuth redirect
    document.addEventListener('DOMContentLoaded', () => {
        // Check for redirect paths in different storage mechanisms
        // First check sessionStorage for redirect_after_login (used by CheckoutButton)
        const sessionRedirect = sessionStorage.getItem('redirect_after_login');
        // Then check localStorage for redirectAfterAuth (used by OAuth flow)
        const localRedirect = localStorage.getItem('redirectAfterAuth');
        // Finally, check URL params (might be passed directly)
        const urlParams = new URLSearchParams(window.location.search);
        const queryRedirect = urlParams.get('redirect');
        
        // Determine the final redirect destination, with priorities
        let redirectUrl = '/';
        
        if (sessionRedirect) {
            redirectUrl = sessionRedirect;
            sessionStorage.removeItem('redirect_after_login');
        } else if (localRedirect) {
            redirectUrl = localRedirect;
            localStorage.removeItem('redirectAfterAuth');
        } else if (queryRedirect) {
            // Handle special cases
            if (queryRedirect === 'checkout') {
                redirectUrl = '/checkout';
            } else {
                redirectUrl = queryRedirect;
            }
        }

        // Check if the user is authenticated
        if (pb.authStore.isValid) {
            // User is authenticated, redirect to the destination
            window.location.href = redirectUrl;
        } else {
            // Something went wrong, redirect to login
            window.location.href = '/login?error=auth_failed';
        }
    });
</script>
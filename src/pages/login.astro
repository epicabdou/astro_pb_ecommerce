---
import MainLayout from '../layouts/MainLayout.astro';
import { login, pb } from '../lib/pocketbase';

// Get redirect URL from query params (if any)
const { searchParams } = Astro.url;
const redirectParam = searchParams.get('redirect');

// Handle special redirects
let redirectUrl = '/';
if (redirectParam === 'checkout') {
    redirectUrl = '/checkout';
} else if (redirectParam) {
    redirectUrl = redirectParam;
}

// Handle form submission
let errorMessage = '';
let isRedirecting = false;

if (Astro.request.method === 'POST') {
    try {
        const formData = await Astro.request.formData();
        const email = formData.get('email')?.toString();
        const password = formData.get('password')?.toString();

        if (!email || !password) {
            errorMessage = 'Email and password are required';
        } else {
            // Attempt to log in
            await login(email, password);

            // Set redirecting flag
            isRedirecting = true;

            // Redirect after successful login
            return Astro.redirect(redirectUrl);
        }
    } catch (error) {
        console.error('Login error:', error);
        errorMessage = 'Invalid email or password';
    }
}

// For OAuth, we'll initiate the flow in client-side JavaScript
---

<MainLayout>
    <div class="flex justify-center items-center min-h-[calc(100vh-200px)] py-12 px-4">
        <div class="max-w-md w-full space-y-8 bg-base-100 p-6 md:p-8 rounded-lg shadow-lg">
            <div class="text-center">
                <h1 class="text-3xl font-bold mb-2">Welcome Back</h1>
                <p class="text-base-content/70">Sign in to your account to continue</p>
            </div>

            {isRedirecting && (
                    <div class="alert alert-info justify-center">
                        <span class="loading loading-spinner loading-sm"></span>
                        <span>Redirecting...</span>
                    </div>
            )}

            {errorMessage && (
                    <div class="alert alert-error">
                        <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <span>{errorMessage}</span>
                    </div>
            )}

            <div class="divider">Sign in with</div>

            <!-- OAuth Login Button (client-side) -->
            <div class="flex justify-center">
                <button id="google-login" class="btn btn-outline gap-2">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-5 h-5">
                        <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
                        <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
                        <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
                        <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
                    </svg>
                    Sign in with Google
                </button>
            </div>

            <div class="divider">Or with email</div>

            <!-- Email Login Form -->
            <form method="POST" class="space-y-4">
                <div class="form-control">
                    <label class="label" for="email">
                        <span class="label-text">Email Address</span>
                    </label>
                    <input
                            type="email"
                            id="email"
                            name="email"
                            class="input input-bordered w-full"
                            required
                            placeholder="your@email.com"
                    />
                </div>

                <div class="form-control">
                    <label class="label" for="password">
                        <span class="label-text">Password</span>
                        <a href="/forgot-password" class="label-text-alt link link-hover">Forgot password?</a>
                    </label>
                    <input
                            type="password"
                            id="password"
                            name="password"
                            class="input input-bordered w-full"
                            required
                            minlength="8"
                            placeholder="••••••••"
                    />
                </div>

                <div class="form-control">
                    <label class="label cursor-pointer">
                        <span class="label-text">Remember me</span>
                        <input type="checkbox" name="remember" class="checkbox checkbox-primary" />
                    </label>
                </div>

                <div class="form-control mt-6">
                    <button type="submit" class="btn btn-primary">Sign in</button>
                </div>
            </form>

            <div class="text-center mt-4">
                <p>Don't have an account? <a href="/register" class="link link-primary">Create an account</a></p>
            </div>
        </div>
    </div>
</MainLayout>

<script>
    // Client-side script for handling OAuth
    import { pb } from '../lib/pocketbase';

    document.addEventListener('DOMContentLoaded', () => {
        const googleButton = document.getElementById('google-login');
        if (googleButton) {
            googleButton.addEventListener('click', async () => {
                try {
                    // Store current page URL for redirect after login
                    const currentUrl = window.location.href;
                    const redirectParam = new URLSearchParams(window.location.search).get('redirect');
                    const redirectAfterAuth = redirectParam || '/';

                    // Store redirect info in localStorage
                    localStorage.setItem('redirectAfterAuth', redirectAfterAuth);

                    // Use PocketBase's OAuth method
                    const authData = await pb.collection('users').authWithOAuth2({
                        provider: 'google',
                        // The redirectUrl should be your expected callback URL
                        // which will handle the OAuth response
                        redirectUrl: window.location.origin + '/auth/redirect'
                    });

                    // This won't execute immediately as the browser will be redirected by PocketBase
                    console.log('Authenticated successfully', authData);

                    // If somehow execution continues, redirect to the intended destination
                    window.location.href = redirectAfterAuth;
                } catch (error) {
                    console.error('OAuth error:', error);
                    alert('Failed to authenticate with Google. Please try again.');
                }
            });
        }
    });
</script>